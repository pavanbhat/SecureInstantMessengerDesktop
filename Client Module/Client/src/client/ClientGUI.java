/**
 * Foundations of Computer Networks
 * Term Project 
 * Submitted by - Swapnil Kamat(snk6855@rit.edu), Pavan Bhat(pxb8715@rit.edu)
 */

package client;

import com.sun.jmx.snmp.daemon.CommunicatorServer;
import java.awt.Component;
import java.io.IOException;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import org.json.simple.parser.ParseException;

public class ClientGUI extends javax.swing.JFrame {

    /**
     * Creates new form ClientGUI
     */
    public ClientGUI() {
        initComponents();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        currentBuddyName = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        sendBtn = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        onlineBuddies = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        usernametxt = new javax.swing.JTextField();
        registerBtn = new javax.swing.JButton();
        loginBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        buddytxt = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        logoutBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        chatDisplayArea = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        offlineBuddies = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Online buddies:");

        jLabel2.setText("Offline buddies:");

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane4.setViewportView(textArea);

        sendBtn.setText("Send");
        sendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBtnActionPerformed(evt);
            }
        });

        onlineBuddies.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onlineBuddiesMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(onlineBuddies);

        jLabel3.setText("Username:");

        usernametxt.setToolTipText("");

        registerBtn.setText("Register");
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });

        loginBtn.setText("Login");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("Add buddy:");

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        logoutBtn.setText("Logout");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(chatDisplayArea);

        jScrollPane3.setViewportView(offlineBuddies);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane4)
                                .addGap(18, 18, 18)
                                .addComponent(sendBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(currentBuddyName)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane5)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usernametxt)
                            .addComponent(buddytxt))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(registerBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(237, 237, 237)
                        .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(usernametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registerBtn)
                    .addComponent(loginBtn)
                    .addComponent(logoutBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(buddytxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBtn))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(currentBuddyName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sendBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane4))))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public static ClientGUI obj;
    
    /**
     * Action to be performed on send button click.
     * @param evt 
     */
    private void sendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBtnActionPerformed
        // TODO add your handling code here:
        
        if(!textArea.getText().equals("")){
            String newChat = Client.chat.get(Client.currentUserChat) + "<b>"+Client.myUsername+": </b>"+textArea.getText()+"<br>";
            Client.chat.put(Client.currentUserChat, newChat);
//            System.out.println(Client.chat.get(Client.myUsername));
            updateChatArea();
            
            try {
                Client.createMessage(Client.currentUserChat, Client.myUsername, textArea.getText());
            } catch (IOException ex) {
                Logger.getLogger(ClientGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            textArea.setText("");
        }
        
    }//GEN-LAST:event_sendBtnActionPerformed

    /**
     * Action to be performed on login button click.
     * @param evt 
     */
    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        // TODO add your handling code here:
        
        try {
            // TODO add your handling code here:
            if(!"".equals(usernametxt.getText())){
                Client.login(usernametxt.getText());
                Client.sendPresenceMessage(Client.myUsername, "online");
            }
        } catch (UnknownHostException ex) {
            Logger.getLogger(ClientGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ClientGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_loginBtnActionPerformed

    /**
     * Action to be performed on add button click.
     * @param evt 
     */
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            if(!"".equals(buddytxt.getText())){
                Client.addBuddy(buddytxt.getText());
            }
        } catch (UnknownHostException ex) {
            Logger.getLogger(ClientGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(ClientGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_addBtnActionPerformed

    /**
     * Action to be performed on register button click.
     * @param evt 
     */
    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed
        try {
            // TODO add your handling code here:
            if(!"".equals(usernametxt.getText())){
                Client.register(usernametxt.getText());
            }
        } catch (UnknownHostException ex) {
            Logger.getLogger(ClientGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_registerBtnActionPerformed

    /**
     * Action to be performed on logout button click.
     * @param evt 
     */
    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        try {
            // TODO add your handling code here:
            
            Client.sendPresenceMessage(Client.myUsername, "offline");
            Client.logout();
            chatDisplayArea.setText("");
            currentBuddyName.setText("");
            textArea.setText("");
            buddytxt.setText("");
        } catch (IOException ex) {
            Logger.getLogger(ClientGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_logoutBtnActionPerformed

    /**
     * Action to be performed on selecting buddy from online buddies list.
     * @param evt 
     */
    private void onlineBuddiesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onlineBuddiesMouseClicked
        // TODO add your handling code here:
        
        Client.currentUserChat = onlineBuddies.getSelectedValue();
        
        currentBuddyName.setText(Client.currentUserChat);
        
        if(!Client.chat.containsKey(Client.currentUserChat)){
            Client.chat.put(Client.currentUserChat,"");
        }
        
        updateChatArea();
        
    }//GEN-LAST:event_onlineBuddiesMouseClicked
    
    /**
     * Updates the chat display window
     */
    protected void updateChatArea(){
        
        if(Client.chat.containsKey(Client.currentUserChat)){
            chatDisplayArea.setContentType("text/html");
            chatDisplayArea.setText(Client.chat.get(Client.currentUserChat));
        }
        else{
            chatDisplayArea.setText("");
        }
    }
    
    /**
     * Clears the Current chat buddy name
     * @param type 
     */
    protected void clear(String type){
        if(!type.equals("buddytxt")){
            buddytxt.setText("");
        }
    }
    
    /**
     * Updates the online and offline buddy lists based on the current status
     * @param buddy buddy name
     * @param status current status of the buddy
     */
    protected void update(String buddy, String status){
        if(!buddy.equals("") && status.equals("online")){
            if(d_off.contains(buddy)){
                d_off.removeElement(buddy);
            }
            onlineBuddies.setModel(d_on);
            d_on.addElement(buddy);
        }
        else if(!buddy.equals("") && status.equals("offline")){
            if(d_on.contains(buddy)){
                d_on.removeElement(buddy);
            }
            offlineBuddies.setModel(d_off);
            d_off.addElement(buddy);
        }
        else if(buddy.equals(""))
        {
            System.out.println("removed all elements");
            d_on.removeAllElements();
            d_off.removeAllElements();
        }
    }
    
    /**
     * Sets the visibility of chat window elements
     * @param flag false hides the elements
     */
    protected void setChatElemVisibility(boolean flag){
        currentBuddyName.setVisible(flag);
        chatDisplayArea.setVisible(flag);
        textArea.setVisible(flag);
        sendBtn.setVisible(flag);
        jLabel1.setVisible(flag);
        jLabel2.setVisible(flag);
        onlineBuddies.setVisible(flag);
        offlineBuddies.setVisible(flag);
        jLabel4.setVisible(flag);
        buddytxt.setVisible(flag);
        addBtn.setVisible(flag);
        logoutBtn.setVisible(flag);
        jScrollPane3.setVisible(flag);
        jScrollPane4.setVisible(flag);
        jScrollPane5.setVisible(flag);
        jScrollPane1.setVisible(flag);
        registerBtn.setVisible(!flag);
        usernametxt.setEditable(!flag);
        loginBtn.setVisible(!flag);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientGUI().setVisible(true);            
                               
            }
        });
        
    }

   DefaultListModel d_on = new DefaultListModel();
   DefaultListModel d_off = new DefaultListModel();
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JTextField buddytxt;
    private javax.swing.JTextPane chatDisplayArea;
    private javax.swing.JLabel currentBuddyName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton loginBtn;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JList<String> offlineBuddies;
    private javax.swing.JList<String> onlineBuddies;
    private javax.swing.JButton registerBtn;
    private javax.swing.JButton sendBtn;
    private javax.swing.JTextArea textArea;
    private javax.swing.JTextField usernametxt;
    // End of variables declaration//GEN-END:variables
}
